<EditForm class="needs-validation" Model="@product" OnValidSubmit="@HandleValidSubmit">
    <div class="mb-3">
        <label for="validationCustom01" class="form-label">Category</label>
        <InputSelect id="validationCustom01" class="form-control" @bind-Value="product.CategoryId">
            @if (categories == null)
            {
                <option>Loading</option>
            }
            else
            {
                @foreach (var item in categories)
                {
                    <option value="@item.Id">@item.CategoryName.ToString()</option>
                }
            }


        </InputSelect> 
    </div>
    
        <div class="mb-3">
            <label for="productnamn" class="form-label">Product Name</label>
            <InputText id="validationCustom01" class="form-control" @bind-Value="product.ProductName" required />
        </div>
        <div class="mb-3">
            <label for="validationCustom01" class="form-label">Short description</label>
            <InputText id="validationCustom01" class="form-control" @bind-Value="product.ShortDescription" required />
        </div>
        <div class="mb-3">
            <label for="description" class="form-label">Long description</label>
            <InputTextArea id="description" class="form-control" @bind-Value="product.LongDescription" required />
        </div>
        <div class="mb-3">
            <label for="image" class="form-label">Image Url</label>
            <InputText id="name" class="form-control" @bind-Value="product.ImgUrl" required />
        </div>
        <div class="mb-3">
            <label for="price" class="form-label">Price</label>
            <InputNumber id="name" class="form-control" @bind-Value="product.Price" required />
        </div>
        <div class="mb-3">
            <label for="instock" class="form-checkbox">In stock</label>
            <InputCheckbox id="name" class="" @bind-Value="product.InStock" />
        </div>
        <div class="mb-5">
            <button class="btn btn-secondary" type="submit">Add Product</button>
        </div>
   
</EditForm>



@code {
    private Product product = new();

    private async Task HandleValidSubmit()
    {
        await Http.PostAsJsonAsync("https://localhost:44311/api/products", product);
        product = new();

        StateHasChanged();
    }

    private Category[] categories;

    private async Task GetCategoryAsync()
    {
        categories = await Http.GetFromJsonAsync<Category[]>("https://localhost:44311/api/Categories");
        @foreach (var item in categories)
        {
            Console.WriteLine(item.CategoryName.ToString());
        }
        StateHasChanged();
    }

    protected override async void OnInitialized()
    {
        await GetCategoryAsync();
        
    }


    
}
